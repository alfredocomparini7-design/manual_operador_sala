import os
from docx import Document
import streamlit as st
from PIL import Image

st.set_page_config(page_title="Manual Operador Super10", page_icon="üõí", layout="wide")

st.title("üìò Manual Operador Sala / Super10")

# --- Cargar DOCX desde el repo ---
doc_path = os.path.join(os.path.dirname(__file__), "manual.docx.docx")

try:
    doc = Document(doc_path)
    st.success("‚úÖ Manual cargado correctamente")
except Exception as e:
    st.error(f"‚ùå No se pudo abrir el manual en {doc_path}")
    st.stop()

# --- Mostrar contenido ---
for p in doc.paragraphs:
    text = p.text.strip()
    if not text:
        st.write("")  # mantener espacios
        continue

    # Detectar encabezados o frases clave
    if text.lower().startswith(("caja", "sala", "c√≥mo reponer", "tipos de cortes")):
        st.subheader(text)
    elif text.startswith("‚úÖ"):
        st.success(text)
    elif text.startswith("‚ùå"):
        st.error(text)
    else:
        st.write(text)

    # Si es la secci√≥n de ejemplo correcto
    if "As√≠ deber√≠a quedar" in text:
        if os.path.exists(os.path.join(os.path.dirname(__file__), "Si.jpg")):
            st.image(os.path.join(os.path.dirname(__file__), "Si.jpg"), caption="Ejemplo correcto de reposici√≥n")
        else:
            st.warning("‚ö†Ô∏è Imagen 'Si.jpg' no encontrada en el repositorio")

    # Si es la secci√≥n "Esto no es as√≠"
    if "Esto no es as√≠" in text:
        st.info("Aqu√≠ puedes agregar la imagen de un mal ejemplo en el futuro.")



# --- Configuraci√≥n de la app ---
st.set_page_config(page_title="Manual Operador Super10", page_icon="üõí", layout="wide")

st.title("üìò Manual de tareas - Operador Sala / Super10")
st.markdown("Versi√≥n interactiva y visual del manual, con ejemplos y espacios para im√°genes.")

# --- Cargar documento Word ---
doc_path = "C:/Users/alfre/Downloads/manual.docx.docx"
doc = Document(doc_path)

# --- Renderizar secciones del documento ---
for p in doc.paragraphs:
    text = p.text.strip()
    if not text:
        st.write("")  # mantener espacios
        continue

    # Encabezados detectados
    if text.lower().startswith("caja") or text.lower().startswith("sala") or text.lower().startswith("c√≥mo reponer") or text.lower().startswith("tipos de cortes"):
        st.subheader(text)
    elif text.startswith("‚úÖ"):
        st.success(text)
    elif text.startswith("‚ùå"):
        st.error(text)
    else:
        st.write(text)

    # Secci√≥n especial: mostrar imagen en "As√≠ deber√≠a quedar"
    if "As√≠ deber√≠a quedar" in text:
        try:
            img = Image.open("Si.jpg")
            st.image(img, caption="Ejemplo correcto de reposici√≥n", use_column_width=True)
        except:
            st.warning("No se encontr√≥ la imagen de ejemplo (Si.jpg).")

    # Secci√≥n especial: subir imagen en "Esto no es as√≠"
    if "Esto no es as√≠" in text:
        file = st.file_uploader("Sube aqu√≠ un ejemplo de reposici√≥n incorrecta", type=["jpg","png"])
        if file:
            bad_img = Image.open(file)
            st.image(bad_img, caption="Ejemplo incorrecto de reposici√≥n", use_column_width=True)

# --- Nueva secci√≥n: Tipos de cortes ---
st.markdown("---")
st.header("üî™ Tipos de cortes")

st.write("A continuaci√≥n se muestran espacios reservados para validar si un corte est√° **bien hecho (‚úÖ)** o **mal hecho (‚ùå)**. Puedes subir im√°genes de ejemplo:")

col1, col2 = st.columns(2)

with col1:
    st.subheader("Corte 1")
    img1 = st.file_uploader("Subir imagen Corte 1", type=["jpg","png"], key="c1")
    if img1:
        st.image(Image.open(img1), caption="Corte 1", use_column_width=True)
        st.success("‚úÖ Bien hecho")
    else:
        st.error("‚ùå Falta imagen")

with col2:
    st.subheader("Corte 2")
    img2 = st.file_uploader("Subir imagen Corte 2", type=["jpg","png"], key="c2")
    if img2:
        st.image(Image.open(img2), caption="Corte 2", use_column_width=True)
        st.success("‚úÖ Bien hecho")
    else:
        st.error("‚ùå Falta imagen")

# Se pueden a√±adir m√°s cortes seg√∫n se necesite




